#port: 7890           # HTTP 代理端口
#socks-port: 7891     # SOCKS5 代理端口
#redir-port: 7892     # Linux 和 macOS 的 redir 代理端口
mixed-port: 7893      # 混合端口 HTTP和SOCKS5用一个端口
allow-lan: true       # 允许局域网的连接（可用来共享代理）
bind-address: "*"     # 仅在将allow-lan设置为true时适用
                      # #"*": 绑定所有IP地址
ipv6: false           # 开启 IPv6 总开关,关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
mode: rule            # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info       # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
external-controller: '127.0.0.1:9090'   #外部控制器,可以使用 RESTful API 来控制你的 clash 内核

dns:
  enable: true             # 关闭将使用系统 DNS
  ipv6: false              # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip   # 模式：redir-host或fake-ip
  listen: 0.0.0.0:53       # DNS监听地址
  fake-ip-range: 198.18.0.1/16    # Fake-IP解析地址池
  fake-ip-filter: ['*.lan', 'cable.auth.com', '*.msftconnecttest.com', '*.msftncsi.com', 'network-test.debian.org', 'detectportal.firefox.com', 'resolver1.opendns.com', '*.srv.nintendo.net', '*.stun.playstation.net', 'xbox.*.microsoft.com', '*.xboxlive.com', 'stun.*', 'global.turn.twilio.com', 'global.stun.twilio.com', 'localhost.*.qq.com', 'localhost.*.weixin.qq.com', '*.logon.battlenet.com.cn', '*.logon.battle.net', '*.blzstatic.cn', 'music.163.com', '*.music.163.com', '*.126.net', 'musicapi.taihe.com', 'music.taihe.com', 'songsearch.kugou.com', 'trackercdn.kugou.com', '*.kuwo.cn', 'api-jooxtt.sanook.com', 'api.joox.com', 'joox.com', 'y.qq.com', '*.y.qq.com', 'streamoc.music.tc.qq.com', 'mobileoc.music.tc.qq.com', 'isure.stream.qqmusic.qq.com', 'dl.stream.qqmusic.qq.com', 'aqqmusic.tc.qq.com', 'amobile.music.tc.qq.com', '*.xiami.com', '*.music.migu.cn', 'music.migu.cn', 'proxy.golang.org', '*.mcdn.bilivideo.cn', '*.cmpassport.com', 'id6.me', 'open.e.189.cn', 'mdn.open.wo.cn', 'opencloud.wostore.cn', 'auth.wosms.cn', '*.jegotrip.com.cn', '*.icitymobile.mobi', '*.pingan.com.cn', '*.cmbchina.com', 'pool.ntp.org', '*.pool.ntp.org', 'ntp.*.com', 'time.*.com', 'ntp?.*.com', 'time?.*.com', 'time.*.gov', 'time.*.edu.cn', '*.ntp.org.cn', 'PDC._msDCS.*.*', 'DC._msDCS.*.*', 'GC._msDCS.*.*']
                          # fake ip 白名单列表'以下地址不会下发fakeip映射用于连接
  nameserver: [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]               
                          # 默认DNS服务器，支持udp/tcp/dot/doh/doq
  
cfw-bypass: ['localhost', '*.local', 'captive.apple.com', 'e.crashlytics.com', 'sequoia.apple.com', 'seed-sequoia.siri.apple.com', 'www.baidu.com', 'passenger.t3go.cn', 'yunbusiness.ccb.com', 'wxh.wo.cn', 'gate.lagou.com', 'www.abchina.com.cn', 'login-service.mobile-bank.psbc.com', 'mobile-bank.psbc.com', '10.0.0.0/8', '100.64.0.0/10', '127.0.0.1/32', '169.254.0.0/16', '172.16.0.0/12', '192.168.0.0/16', '192.168.122.1/32', '193.168.0.1/32', '224.0.0.0/4', '240.0.0.0/4', '255.255.255.255/32', '::1/128', 'fc00::/7', 'fd00::/8', 'fe80::/10', 'ff00::/8', '2001::/32', '2001:db8::/32', '2002::/16', '::ffff:0:0:0:0/1', '::ffff:128:0:0:0/1' ]
                          # 系统代理跳过列表
 
###建立锚点
    
# 策略组引用相关参数
pr: &pr {type: select, proxies: [🚀 手动切换, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点,   ♻️ 自动选择, ⚠️ 故障转移, DIRECT]}

# 订阅更新和延迟测试相关参数
p: &p {type: http, interval: 86400, health-check: {enable: true, url: http://cp.cloudflare.com/generate_204, interval: 1200}}

# 自动选择策略组：选取延迟最低节点
auto: &auto {type: url-test, lazy: true, url: http://cp.cloudflare.com/generate_204, interval: 900, use: [Subscribe]}

# 手动选择策略组：手动选择想要的节点/策略组
select: &select {type: select, use: [Subscribe]}

# 故障回退策略组：策略组将按顺序选择你列表中第一个可用的节点
fallback: &fallback {type: fallback, lazy: true, url: http://cp.cloudflare.com/generate_204, interval: 900, use: [Subscribe]}

# 负载均衡策略组：不同的请求将使用不同的代理节点
load-balance: &load-balance {type: load-balance, lazy: true, url: http://cp.cloudflare.com/generate_204, interval: 900, use: [Subscribe]}

# classical规则相关
c: &c {type: http, behavior: classical, interval: 86400}

# domain规则相关
d: &d {type: http, behavior: domain, interval: 86400}

# ipcidr规则相关
i: &i {type: http, behavior: ipcidr, interval: 86400}

###结束

proxy-providers:
#  Subscribe: {<<: *p, url: https://sub.xeton.dev/sub?target=clash&url=订阅链接e&list=true&udp=true}
   Subscribe: {<<: *p, url: https://sub.xeton.dev/sub?target=clash&url=https://api.huacloud.xyz/sub?target=clash&insert=true&emoji=true&udp=true&clash.doh=true&new_name=true&filename=Flower_SS&url=https%3A%2F%2Fapi.flowercloud.xyz%2Fosubscribe.php%3Fsid%3D71352%26token%3DPxrkX1MF3g63%26sip002%3D1|https://support.tagsssubscribe.com/api/v1/client/subscribe?token=77f3a5a02533da67f35b36b1b119250e&list=true&udp=true}
    # 可以使用任意类型的链接替换上面文字,多个链接使用英文符号的竖杠|隔开一起写上即可
    # Sub-Store生成的链接,可以直接替换上述url引号中的部分,具体见Sub-Store教程         
               
proxies: 

proxy-groups:

 #节点地区分组

 - {name: 🇭🇰 香港节点, <<: *select, filter: "^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))"}

 - {name: 🇨🇳 台湾节点, <<: *select, filter: "(?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)"}
 
 - {name: 🇸🇬 新加坡节点, <<: *select, filter: "^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))"}

 - {name: 🇯🇵 日本节点, <<: *select, filter: "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))"}

 - {name: 🇺🇸 美国节点, <<: *select, filter: "^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))"}

 - {name: 🇰🇷 韩国节点, <<: *select, filter: "(?i)韩国|KR"}

 - {name: 🇹🇷 土耳其节点, <<: *select, filter: "(?i)土耳其|TR"}

 - {name: 🏠家宽, <<: *select,filter: "(?i)家宽"}

 - {name: 🛰️特殊节点, <<: *select,filter: "^(?!.*(香港|美国|新加坡|日本|土耳其|韩国|台湾|官址|HK|DE|JP|US))"}

 #分流分组

 - {name: 🚀 手动切换, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点, 🇯🇵 日本节点,  DIRECT]}

 - {name: 🌏 国外网站, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点, 🇯🇵 日本节点,  DIRECT]}

 - {name: 📹 国际媒体, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点, 🇯🇵 日本节点,  DIRECT]}

 - {name: 🍎 苹果服务, type: select,  proxies: [🇭🇰 香港节点, 🇺🇸 美国节点, DIRECT]}

 - {name: 💌 Github,type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点, 🇯🇵 日本节点, DIRECT]}

 - {name: 🍿 Netflix, type: select,  proxies: [🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇹🇷 土耳其节点, DIRECT]}

 - {name: 🎵 Youtube, type: select,  proxies: [🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, DIRECT]}

 - {name: 📟 电报消息, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点, 🇯🇵 日本节点,  DIRECT]}

 - {name: 🐦 推特消息, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点, 🇯🇵 日本节点,  DIRECT]}
 
 - {name: 🤖 OpenAI, type: select,  proxies: [🇺🇸 美国节点, DIRECT]}

 - {name: 🌌 谷歌服务, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点,🇯🇵 日本节点,  DIRECT]}

 - {name: 🎮 游戏平台, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点,🇯🇵 日本节点,  DIRECT]}
  
 - {name: 📺 哔哩哔哩, type: select, proxies: [DIRECT, 🇭🇰 香港节点]}

 - {name: 🌏 国内网站, type: select, proxies: [DIRECT, 🚀 手动切换]}
  
 - {name: 🛑 AdBlock, type: select, proxies: [REJECT, DIRECT]}
  
 - {name: 🐟 漏网之鱼, type: select,  proxies: [🇭🇰 香港节点,  🇸🇬 新加坡节点, 🇺🇸 美国节点,🇯🇵 日本节点,  DIRECT]}

 
rule-providers:

 # 规则修正
 Direct: {<<: *c, path: ./ruleset/Direct.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.yaml}

 # 局域网   
 Lan: {<<: *c, path: ./ruleset/Lan.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml}

 # 下载服务
 Download: {<<: *c, path: ./ruleset/Download.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download.yaml}
    
 #广告拦截
 AD@dler-io: {<<: *c, path: ./ruleset/AD.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/Reject.yaml}

  # 苹果服务
 Apple: {<<: *c, path: ./ruleset/Apple.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml}

 # Github 
 Github: {<<: *c, path: ./ruleset/Github.yaml,url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml}

 # 谷歌服务
 Google: {<<: *c, path: ./ruleset/Google.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml}

 # 电报消息
 Telegram: {<<: *c, path: ./ruleset/Telegram.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml}

 # Netflix
 Netflix: {<<: *c, path: ./ruleset/Netflix.yaml, url:  https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml}
 
 # 推特消息
 Twitter: {<<: *c, path: ./ruleset/Twitter.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Twitter.yaml}

 # Youtube
 Youtube: {<<: *c,path: ./ruleset/Youtube.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml}
 
 # 哔哩哔哩
 BiliBili: {<<: *c, path: ./ruleset/BiliBili.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Bilibili.yaml}

 # 游戏平台
 Game: {<<: *c, path: ./ruleset/Game.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml}

 # AI平台
 OpenAI: {<<: *c, path: ./ruleset/OpenAI.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/OpenAi.yaml}

 # 中国大陆
 ChinaIP: {<<: *i, path: ./ruleset/ChinaIP.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/soffchen/GeoIP2-CN/release/clash-rule-provider.yml}
 ChinaDomain: {<<: *c, path: ./ruleset/ChinaDomain.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml}

# 国际媒体
 GlobalMedia: {<<: *c, path: ./ruleset/GlobalMedia.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.yaml}

 # 代理网站
 Global: {<<: *c, path: ./ruleset/Global.yaml, url: https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global.yaml}
 
rules:
  #- SCRIPT,quic,REJECT
  - RULE-SET,Direct,DIRECT
  - RULE-SET,Lan,DIRECT
#  - RULE-SET,Download,DIRECT
  - RULE-SET,AD@dler-io,🛑 AdBlock
  - RULE-SET,OpenAI,🤖 OpenAI
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Github,💌 Github
  - RULE-SET,Netflix,🍿 Netflix
  - RULE-SET,Youtube,🎵 Youtube
  - RULE-SET,Telegram,📟 电报消息
  - RULE-SET,Twitter,🐦 推特消息
  - RULE-SET,BiliBili,📺 哔哩哔哩
  - RULE-SET,Google,🌌 谷歌服务
  - RULE-SET,Game,🎮 游戏平台
  - RULE-SET,GlobalMedia,📹 国际媒体
  - RULE-SET,Global,🌏 国外网站
  - RULE-SET,ChinaDomain,🌏 国内网站
  - RULE-SET,ChinaIP,🌏 国内网站
  - GEOIP,CN,🌏 国内网站
  - MATCH,🐟 漏网之鱼

script:
  shortcuts:
    quic: network == 'udp' and dst_port == 443
